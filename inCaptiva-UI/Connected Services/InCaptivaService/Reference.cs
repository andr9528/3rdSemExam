//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InCaptivaService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    public partial class Task : object
    {
        
        private System.DateTime CompletedTimeField;
        
        private string DescriptionField;
        
        private int IDField;
        
        private int ProjectIDField;
        
        private System.DateTime StartTimeField;
        
        private bool StatusField;
        
        private System.Collections.Generic.List<int> TimeUsedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CompletedTime
        {
            get
            {
                return this.CompletedTimeField;
            }
            set
            {
                this.CompletedTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID
        {
            get
            {
                return this.ProjectIDField;
            }
            set
            {
                this.ProjectIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TimeUsed
        {
            get
            {
                return this.TimeUsedField;
            }
            set
            {
                this.TimeUsedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    public partial class Worker : object
    {
        
        private int IDField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    public partial class Project : object
    {
        
        private System.DateTime CompletedTimeField;
        
        private int IDField;
        
        private string NameField;
        
        private System.DateTime StartTimeField;
        
        private bool StatusField;
        
        private System.Collections.Generic.List<int> TimeUsedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CompletedTime
        {
            get
            {
                return this.CompletedTimeField;
            }
            set
            {
                this.CompletedTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TimeUsed
        {
            get
            {
                return this.TimeUsedField;
            }
            set
            {
                this.TimeUsedField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkEntry", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    public partial class WorkEntry : object
    {
        
        private System.DateTime CompletedTimeField;
        
        private int IDField;
        
        private System.DateTime StartTimeField;
        
        private bool StatusField;
        
        private int TaskIDField;
        
        private System.Collections.Generic.List<int> TimeUsedField;
        
        private int WorkerIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CompletedTime
        {
            get
            {
                return this.CompletedTimeField;
            }
            set
            {
                this.CompletedTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID
        {
            get
            {
                return this.IDField;
            }
            set
            {
                this.IDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status
        {
            get
            {
                return this.StatusField;
            }
            set
            {
                this.StatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID
        {
            get
            {
                return this.TaskIDField;
            }
            set
            {
                this.TaskIDField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<int> TimeUsed
        {
            get
            {
                return this.TimeUsedField;
            }
            set
            {
                this.TimeUsedField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkerID
        {
            get
            {
                return this.WorkerIDField;
            }
            set
            {
                this.WorkerIDField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InCaptivaService.IInCaptivaService")]
    public interface IInCaptivaService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetData", ReplyAction="http://tempuri.org/IInCaptivaService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetTasks", ReplyAction="http://tempuri.org/IInCaptivaService/GetTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.Task>> GetTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetWorkers", ReplyAction="http://tempuri.org/IInCaptivaService/GetWorkersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.Worker>> GetWorkersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetProjects", ReplyAction="http://tempuri.org/IInCaptivaService/GetProjectsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.Project>> GetProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetWorkEntries", ReplyAction="http://tempuri.org/IInCaptivaService/GetWorkEntriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.WorkEntry>> GetWorkEntriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewWorker", ReplyAction="http://tempuri.org/IInCaptivaService/NewWorkerResponse")]
        System.Threading.Tasks.Task NewWorkerAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewProject", ReplyAction="http://tempuri.org/IInCaptivaService/NewProjectResponse")]
        System.Threading.Tasks.Task NewProjectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewTask", ReplyAction="http://tempuri.org/IInCaptivaService/NewTaskResponse")]
        System.Threading.Tasks.Task NewTaskAsync(int projectID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/NewWorkEntryResponse")]
        System.Threading.Tasks.Task NewWorkEntryAsync(int workerID, int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/StartBreak", ReplyAction="http://tempuri.org/IInCaptivaService/StartBreakResponse")]
        System.Threading.Tasks.Task StartBreakAsync(int workerID, int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EndBreak", ReplyAction="http://tempuri.org/IInCaptivaService/EndBreakResponse")]
        System.Threading.Tasks.Task EndBreakAsync(int workerID, int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditWorker", ReplyAction="http://tempuri.org/IInCaptivaService/EditWorkerResponse")]
        System.Threading.Tasks.Task EditWorkerAsync(int workerID, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/EditWorkEntryResponse")]
        System.Threading.Tasks.Task EditWorkEntryAsync(int entryID, System.Nullable<System.DateTime> start, int workerID, int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditTask", ReplyAction="http://tempuri.org/IInCaptivaService/EditTaskResponse")]
        System.Threading.Tasks.Task EditTaskAsync(int taskID, string description, System.Nullable<System.DateTime> start, int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditProject", ReplyAction="http://tempuri.org/IInCaptivaService/EditProjectResponse")]
        System.Threading.Tasks.Task EditProjectAsync(int projectID, string name, System.Nullable<System.DateTime> start);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteWorker", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteWorkerResponse")]
        System.Threading.Tasks.Task<string> DeleteWorkerAsync(int workerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteWorkEntryResponse")]
        System.Threading.Tasks.Task<string> DeleteWorkEntryAsync(int workerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteTask", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteTaskResponse")]
        System.Threading.Tasks.Task<string> DeleteTaskAsync(int workerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteProject", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteProjectResponse")]
        System.Threading.Tasks.Task<string> DeleteProjectAsync(int workerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/ResetService", ReplyAction="http://tempuri.org/IInCaptivaService/ResetServiceResponse")]
        System.Threading.Tasks.Task ResetServiceAsync(string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public interface IInCaptivaServiceChannel : InCaptivaService.IInCaptivaService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "0.5.0.0")]
    public partial class InCaptivaServiceClient : System.ServiceModel.ClientBase<InCaptivaService.IInCaptivaService>, InCaptivaService.IInCaptivaService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public InCaptivaServiceClient() : 
                base(InCaptivaServiceClient.GetDefaultBinding(), InCaptivaServiceClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.MetadataExchangeHttpBinding_IInCaptivaService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InCaptivaServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(InCaptivaServiceClient.GetBindingForEndpoint(endpointConfiguration), InCaptivaServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InCaptivaServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(InCaptivaServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InCaptivaServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(InCaptivaServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public InCaptivaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value)
        {
            return base.Channel.GetDataAsync(value);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.Task>> GetTasksAsync()
        {
            return base.Channel.GetTasksAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.Worker>> GetWorkersAsync()
        {
            return base.Channel.GetWorkersAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.Project>> GetProjectsAsync()
        {
            return base.Channel.GetProjectsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptivaService.WorkEntry>> GetWorkEntriesAsync()
        {
            return base.Channel.GetWorkEntriesAsync();
        }
        
        public System.Threading.Tasks.Task NewWorkerAsync(string name)
        {
            return base.Channel.NewWorkerAsync(name);
        }
        
        public System.Threading.Tasks.Task NewProjectAsync(string name)
        {
            return base.Channel.NewProjectAsync(name);
        }
        
        public System.Threading.Tasks.Task NewTaskAsync(int projectID, string description)
        {
            return base.Channel.NewTaskAsync(projectID, description);
        }
        
        public System.Threading.Tasks.Task NewWorkEntryAsync(int workerID, int taskID)
        {
            return base.Channel.NewWorkEntryAsync(workerID, taskID);
        }
        
        public System.Threading.Tasks.Task StartBreakAsync(int workerID, int taskID)
        {
            return base.Channel.StartBreakAsync(workerID, taskID);
        }
        
        public System.Threading.Tasks.Task EndBreakAsync(int workerID, int taskID)
        {
            return base.Channel.EndBreakAsync(workerID, taskID);
        }
        
        public System.Threading.Tasks.Task EditWorkerAsync(int workerID, string name)
        {
            return base.Channel.EditWorkerAsync(workerID, name);
        }
        
        public System.Threading.Tasks.Task EditWorkEntryAsync(int entryID, System.Nullable<System.DateTime> start, int workerID, int taskID)
        {
            return base.Channel.EditWorkEntryAsync(entryID, start, workerID, taskID);
        }
        
        public System.Threading.Tasks.Task EditTaskAsync(int taskID, string description, System.Nullable<System.DateTime> start, int projectID)
        {
            return base.Channel.EditTaskAsync(taskID, description, start, projectID);
        }
        
        public System.Threading.Tasks.Task EditProjectAsync(int projectID, string name, System.Nullable<System.DateTime> start)
        {
            return base.Channel.EditProjectAsync(projectID, name, start);
        }
        
        public System.Threading.Tasks.Task<string> DeleteWorkerAsync(int workerID)
        {
            return base.Channel.DeleteWorkerAsync(workerID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteWorkEntryAsync(int workerID)
        {
            return base.Channel.DeleteWorkEntryAsync(workerID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteTaskAsync(int workerID)
        {
            return base.Channel.DeleteTaskAsync(workerID);
        }
        
        public System.Threading.Tasks.Task<string> DeleteProjectAsync(int workerID)
        {
            return base.Channel.DeleteProjectAsync(workerID);
        }
        
        public System.Threading.Tasks.Task ResetServiceAsync(string password)
        {
            return base.Channel.ResetServiceAsync(password);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MetadataExchangeHttpBinding_IInCaptivaService))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.MetadataExchangeHttpBinding_IInCaptivaService))
            {
                return new System.ServiceModel.EndpointAddress("http://incaptiva.azurewebsites.net/InCaptivaService.svc/mex");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return InCaptivaServiceClient.GetBindingForEndpoint(EndpointConfiguration.MetadataExchangeHttpBinding_IInCaptivaService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return InCaptivaServiceClient.GetEndpointAddress(EndpointConfiguration.MetadataExchangeHttpBinding_IInCaptivaService);
        }
        
        public enum EndpointConfiguration
        {
            
            MetadataExchangeHttpBinding_IInCaptivaService,
        }
    }
}
