//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace InCaptiva_Service.Tests.InCaptivaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProjectIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeUsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedTime {
            get {
                return this.CompletedTimeField;
            }
            set {
                if ((this.CompletedTimeField.Equals(value) != true)) {
                    this.CompletedTimeField = value;
                    this.RaisePropertyChanged("CompletedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeUsed {
            get {
                return this.TimeUsedField;
            }
            set {
                if ((this.TimeUsedField.Equals(value) != true)) {
                    this.TimeUsedField = value;
                    this.RaisePropertyChanged("TimeUsed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Worker", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    [System.SerializableAttribute()]
    public partial class Worker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string JobDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string JobDescription {
            get {
                return this.JobDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.JobDescriptionField, value) != true)) {
                    this.JobDescriptionField = value;
                    this.RaisePropertyChanged("JobDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    [System.SerializableAttribute()]
    public partial class Project : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeUsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedTime {
            get {
                return this.CompletedTimeField;
            }
            set {
                if ((this.CompletedTimeField.Equals(value) != true)) {
                    this.CompletedTimeField = value;
                    this.RaisePropertyChanged("CompletedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeUsed {
            get {
                return this.TimeUsedField;
            }
            set {
                if ((this.TimeUsedField.Equals(value) != true)) {
                    this.TimeUsedField = value;
                    this.RaisePropertyChanged("TimeUsed");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WorkEntry", Namespace="http://schemas.datacontract.org/2004/07/inCaptiva_Service")]
    [System.SerializableAttribute()]
    public partial class WorkEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CompletedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.TimeSpan TimeUsedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkerIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CompletedTime {
            get {
                return this.CompletedTimeField;
            }
            set {
                if ((this.CompletedTimeField.Equals(value) != true)) {
                    this.CompletedTimeField = value;
                    this.RaisePropertyChanged("CompletedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskID {
            get {
                return this.TaskIDField;
            }
            set {
                if ((this.TaskIDField.Equals(value) != true)) {
                    this.TaskIDField = value;
                    this.RaisePropertyChanged("TaskID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.TimeSpan TimeUsed {
            get {
                return this.TimeUsedField;
            }
            set {
                if ((this.TimeUsedField.Equals(value) != true)) {
                    this.TimeUsedField = value;
                    this.RaisePropertyChanged("TimeUsed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int WorkerID {
            get {
                return this.WorkerIDField;
            }
            set {
                if ((this.WorkerIDField.Equals(value) != true)) {
                    this.WorkerIDField = value;
                    this.RaisePropertyChanged("WorkerID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InCaptivaService.IInCaptivaService")]
    public interface IInCaptivaService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetData", ReplyAction="http://tempuri.org/IInCaptivaService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetData", ReplyAction="http://tempuri.org/IInCaptivaService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetTasks", ReplyAction="http://tempuri.org/IInCaptivaService/GetTasksResponse")]
        System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Task> GetTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetTasks", ReplyAction="http://tempuri.org/IInCaptivaService/GetTasksResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Task>> GetTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetWorkers", ReplyAction="http://tempuri.org/IInCaptivaService/GetWorkersResponse")]
        System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Worker> GetWorkers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetWorkers", ReplyAction="http://tempuri.org/IInCaptivaService/GetWorkersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Worker>> GetWorkersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetProjects", ReplyAction="http://tempuri.org/IInCaptivaService/GetProjectsResponse")]
        System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Project> GetProjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetProjects", ReplyAction="http://tempuri.org/IInCaptivaService/GetProjectsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Project>> GetProjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetWorkEntries", ReplyAction="http://tempuri.org/IInCaptivaService/GetWorkEntriesResponse")]
        System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.WorkEntry> GetWorkEntries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/GetWorkEntries", ReplyAction="http://tempuri.org/IInCaptivaService/GetWorkEntriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.WorkEntry>> GetWorkEntriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewWorker", ReplyAction="http://tempuri.org/IInCaptivaService/NewWorkerResponse")]
        bool NewWorker(string name, string phoneNumber, string email, string jobDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewWorker", ReplyAction="http://tempuri.org/IInCaptivaService/NewWorkerResponse")]
        System.Threading.Tasks.Task<bool> NewWorkerAsync(string name, string phoneNumber, string email, string jobDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewProject", ReplyAction="http://tempuri.org/IInCaptivaService/NewProjectResponse")]
        bool NewProject(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewProject", ReplyAction="http://tempuri.org/IInCaptivaService/NewProjectResponse")]
        System.Threading.Tasks.Task<bool> NewProjectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewTask", ReplyAction="http://tempuri.org/IInCaptivaService/NewTaskResponse")]
        bool NewTask(int projectID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewTask", ReplyAction="http://tempuri.org/IInCaptivaService/NewTaskResponse")]
        System.Threading.Tasks.Task<bool> NewTaskAsync(int projectID, string description);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/NewWorkEntryResponse")]
        bool NewWorkEntry(int workerID, int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/NewWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/NewWorkEntryResponse")]
        System.Threading.Tasks.Task<bool> NewWorkEntryAsync(int workerID, int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/StartBreak", ReplyAction="http://tempuri.org/IInCaptivaService/StartBreakResponse")]
        bool StartBreak(int workEntryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/StartBreak", ReplyAction="http://tempuri.org/IInCaptivaService/StartBreakResponse")]
        System.Threading.Tasks.Task<bool> StartBreakAsync(int workEntryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EndBreak", ReplyAction="http://tempuri.org/IInCaptivaService/EndBreakResponse")]
        bool EndBreak(int workEntryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EndBreak", ReplyAction="http://tempuri.org/IInCaptivaService/EndBreakResponse")]
        System.Threading.Tasks.Task<bool> EndBreakAsync(int workEntryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditWorker", ReplyAction="http://tempuri.org/IInCaptivaService/EditWorkerResponse")]
        bool EditWorker(int workerID, string name, string phoneNumber, string email, string jobDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditWorker", ReplyAction="http://tempuri.org/IInCaptivaService/EditWorkerResponse")]
        System.Threading.Tasks.Task<bool> EditWorkerAsync(int workerID, string name, string phoneNumber, string email, string jobDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/EditWorkEntryResponse")]
        bool EditWorkEntry(int entryID, System.Nullable<System.DateTime> start, int workerID, int taskID, System.Nullable<System.DateTime> completed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/EditWorkEntryResponse")]
        System.Threading.Tasks.Task<bool> EditWorkEntryAsync(int entryID, System.Nullable<System.DateTime> start, int workerID, int taskID, System.Nullable<System.DateTime> completed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditTask", ReplyAction="http://tempuri.org/IInCaptivaService/EditTaskResponse")]
        bool EditTask(int taskID, string description, System.Nullable<System.DateTime> start, int projectID, System.Nullable<System.DateTime> completed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditTask", ReplyAction="http://tempuri.org/IInCaptivaService/EditTaskResponse")]
        System.Threading.Tasks.Task<bool> EditTaskAsync(int taskID, string description, System.Nullable<System.DateTime> start, int projectID, System.Nullable<System.DateTime> completed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditProject", ReplyAction="http://tempuri.org/IInCaptivaService/EditProjectResponse")]
        bool EditProject(int projectID, string name, System.Nullable<System.DateTime> start, System.Nullable<System.DateTime> completed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/EditProject", ReplyAction="http://tempuri.org/IInCaptivaService/EditProjectResponse")]
        System.Threading.Tasks.Task<bool> EditProjectAsync(int projectID, string name, System.Nullable<System.DateTime> start, System.Nullable<System.DateTime> completed);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteWorker", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteWorkerResponse")]
        bool DeleteWorker(int workerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteWorker", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteWorkerResponse")]
        System.Threading.Tasks.Task<bool> DeleteWorkerAsync(int workerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteWorkEntryResponse")]
        bool DeleteWorkEntry(int entryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteWorkEntry", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteWorkEntryResponse")]
        System.Threading.Tasks.Task<bool> DeleteWorkEntryAsync(int entryID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteTask", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteTaskResponse")]
        bool DeleteTask(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteTask", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteTaskResponse")]
        System.Threading.Tasks.Task<bool> DeleteTaskAsync(int taskID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteProject", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteProjectResponse")]
        bool DeleteProject(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/DeleteProject", ReplyAction="http://tempuri.org/IInCaptivaService/DeleteProjectResponse")]
        System.Threading.Tasks.Task<bool> DeleteProjectAsync(int projectID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/ResetService", ReplyAction="http://tempuri.org/IInCaptivaService/ResetServiceResponse")]
        bool ResetService(string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInCaptivaService/ResetService", ReplyAction="http://tempuri.org/IInCaptivaService/ResetServiceResponse")]
        System.Threading.Tasks.Task<bool> ResetServiceAsync(string password);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInCaptivaServiceChannel : InCaptiva_Service.Tests.InCaptivaService.IInCaptivaService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InCaptivaServiceClient : System.ServiceModel.ClientBase<InCaptiva_Service.Tests.InCaptivaService.IInCaptivaService>, InCaptiva_Service.Tests.InCaptivaService.IInCaptivaService {
        
        public InCaptivaServiceClient() {
        }
        
        public InCaptivaServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InCaptivaServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InCaptivaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InCaptivaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Task> GetTasks() {
            return base.Channel.GetTasks();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Task>> GetTasksAsync() {
            return base.Channel.GetTasksAsync();
        }
        
        public System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Worker> GetWorkers() {
            return base.Channel.GetWorkers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Worker>> GetWorkersAsync() {
            return base.Channel.GetWorkersAsync();
        }
        
        public System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Project> GetProjects() {
            return base.Channel.GetProjects();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.Project>> GetProjectsAsync() {
            return base.Channel.GetProjectsAsync();
        }
        
        public System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.WorkEntry> GetWorkEntries() {
            return base.Channel.GetWorkEntries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<InCaptiva_Service.Tests.InCaptivaService.WorkEntry>> GetWorkEntriesAsync() {
            return base.Channel.GetWorkEntriesAsync();
        }
        
        public bool NewWorker(string name, string phoneNumber, string email, string jobDescription) {
            return base.Channel.NewWorker(name, phoneNumber, email, jobDescription);
        }
        
        public System.Threading.Tasks.Task<bool> NewWorkerAsync(string name, string phoneNumber, string email, string jobDescription) {
            return base.Channel.NewWorkerAsync(name, phoneNumber, email, jobDescription);
        }
        
        public bool NewProject(string name) {
            return base.Channel.NewProject(name);
        }
        
        public System.Threading.Tasks.Task<bool> NewProjectAsync(string name) {
            return base.Channel.NewProjectAsync(name);
        }
        
        public bool NewTask(int projectID, string description) {
            return base.Channel.NewTask(projectID, description);
        }
        
        public System.Threading.Tasks.Task<bool> NewTaskAsync(int projectID, string description) {
            return base.Channel.NewTaskAsync(projectID, description);
        }
        
        public bool NewWorkEntry(int workerID, int taskID) {
            return base.Channel.NewWorkEntry(workerID, taskID);
        }
        
        public System.Threading.Tasks.Task<bool> NewWorkEntryAsync(int workerID, int taskID) {
            return base.Channel.NewWorkEntryAsync(workerID, taskID);
        }
        
        public bool StartBreak(int workEntryID) {
            return base.Channel.StartBreak(workEntryID);
        }
        
        public System.Threading.Tasks.Task<bool> StartBreakAsync(int workEntryID) {
            return base.Channel.StartBreakAsync(workEntryID);
        }
        
        public bool EndBreak(int workEntryID) {
            return base.Channel.EndBreak(workEntryID);
        }
        
        public System.Threading.Tasks.Task<bool> EndBreakAsync(int workEntryID) {
            return base.Channel.EndBreakAsync(workEntryID);
        }
        
        public bool EditWorker(int workerID, string name, string phoneNumber, string email, string jobDescription) {
            return base.Channel.EditWorker(workerID, name, phoneNumber, email, jobDescription);
        }
        
        public System.Threading.Tasks.Task<bool> EditWorkerAsync(int workerID, string name, string phoneNumber, string email, string jobDescription) {
            return base.Channel.EditWorkerAsync(workerID, name, phoneNumber, email, jobDescription);
        }
        
        public bool EditWorkEntry(int entryID, System.Nullable<System.DateTime> start, int workerID, int taskID, System.Nullable<System.DateTime> completed) {
            return base.Channel.EditWorkEntry(entryID, start, workerID, taskID, completed);
        }
        
        public System.Threading.Tasks.Task<bool> EditWorkEntryAsync(int entryID, System.Nullable<System.DateTime> start, int workerID, int taskID, System.Nullable<System.DateTime> completed) {
            return base.Channel.EditWorkEntryAsync(entryID, start, workerID, taskID, completed);
        }
        
        public bool EditTask(int taskID, string description, System.Nullable<System.DateTime> start, int projectID, System.Nullable<System.DateTime> completed) {
            return base.Channel.EditTask(taskID, description, start, projectID, completed);
        }
        
        public System.Threading.Tasks.Task<bool> EditTaskAsync(int taskID, string description, System.Nullable<System.DateTime> start, int projectID, System.Nullable<System.DateTime> completed) {
            return base.Channel.EditTaskAsync(taskID, description, start, projectID, completed);
        }
        
        public bool EditProject(int projectID, string name, System.Nullable<System.DateTime> start, System.Nullable<System.DateTime> completed) {
            return base.Channel.EditProject(projectID, name, start, completed);
        }
        
        public System.Threading.Tasks.Task<bool> EditProjectAsync(int projectID, string name, System.Nullable<System.DateTime> start, System.Nullable<System.DateTime> completed) {
            return base.Channel.EditProjectAsync(projectID, name, start, completed);
        }
        
        public bool DeleteWorker(int workerID) {
            return base.Channel.DeleteWorker(workerID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWorkerAsync(int workerID) {
            return base.Channel.DeleteWorkerAsync(workerID);
        }
        
        public bool DeleteWorkEntry(int entryID) {
            return base.Channel.DeleteWorkEntry(entryID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteWorkEntryAsync(int entryID) {
            return base.Channel.DeleteWorkEntryAsync(entryID);
        }
        
        public bool DeleteTask(int taskID) {
            return base.Channel.DeleteTask(taskID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteTaskAsync(int taskID) {
            return base.Channel.DeleteTaskAsync(taskID);
        }
        
        public bool DeleteProject(int projectID) {
            return base.Channel.DeleteProject(projectID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteProjectAsync(int projectID) {
            return base.Channel.DeleteProjectAsync(projectID);
        }
        
        public bool ResetService(string password) {
            return base.Channel.ResetService(password);
        }
        
        public System.Threading.Tasks.Task<bool> ResetServiceAsync(string password) {
            return base.Channel.ResetServiceAsync(password);
        }
    }
}
